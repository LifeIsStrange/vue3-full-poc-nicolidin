org.gradle.vfs.watch=true
kapt.use.worker.api=true
# https://kotlinlang.org/docs/reference/kapt.html
# eventually redundant with gradle 6.8 compiler avoidance
kapt.include.compile.classpath=false
org.gradle.parallel=true
# WARNING: you might want to disable all the above properties if your PC RAM overflow.
# they increase build speed at the cost of more RAM
# current parallel gradle might only be useful for composite builds or also for tasks ?
# unit tests could be parrallelised too

# https://docs.gradle.org/current/userguide/command_line_interface.html
# org.gradle.configureondemand=(true,false) not relevant for our project size

# wtf why is the build cache not enabled by default ?
org.gradle.caching=true
# tests *could* be sped up by settings run tests with intellij instead of gradle in settings
# but this would prevent the build cache from working and is bug prone
# cf https://blog.gradle.org/kotlin-build-cache-use
# but just for tests ? its worth a try

# todo: give gradle more RAM when 16GB will be mainstream
# https://docs.gradle.org/current/userguide/build_environment.html#sec:configuring_jvm_memory

# perf status https://github.com/gradle/gradle/issues/15886

# using the gradle enterprise dashboard would be neat